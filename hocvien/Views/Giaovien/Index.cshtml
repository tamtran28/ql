@model IEnumerable<hocvien.Model.Giaovien>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Danh sách giáo viên</h1>
@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <div id="msgAlert" class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}
@if (!string.IsNullOrEmpty(ViewBag.SuaSuccessMessage))
{
    <div id="msgAlertS" class="alert alert-success" role="alert">
        @ViewBag.SuaSuccessMessage
    </div>
}
@if (!string.IsNullOrEmpty(ViewBag.XoaSuccessMessageGV))
{
    <div id="msgAlertX" class="alert alert-success" role="alert">
        @ViewBag.XoaSuccessMessageGV
    </div>
}

<p>
    <a asp-action="formthemGiaovien" class="btn btn-primary">Thêm giáo viên</a>
</p>
<h2>Tìm kiếm giáo viên</h2>
<div class="row">
    <div class="col-md-8">
        <input type="search" id="hotenhv" class="form-control rounded" />
    </div>
    <div class="col-md-4">
        <input type="button" class="btn btn-outline-primary" onclick="timGiaoVien_click()" value="Tìm kiếm" />
    </div>
</div>
<div id="danhsachgiaovien"></div>
<table class="table">
    <thead>
        <tr>
            <th>
               Mã giáo viên
            </th>
            <th>
               Họ tên
            </th>
            <th>
               Ngày sinh
            </th>
            <th>
               Giới tính
            </th>
           
            <th>
               Địa chỉ
            </th>
            <th>
                SDT
            </th>
            <th>
                Cấp độ dạy          
            </th>
            <th>
                Trình độ
            </th>
            <th>
               Email
            </th>
            <th>
                Người tạo
            </th>
            <th>
               Ngày tạo
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Magv)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hoten)
            </td>
            <td>
              @(((DateTime)item.Ngaysinh).ToString("dd/MM/yyyy"))
            </td>
            <td>
                    @if (item.Gioitinh == 1)
                    {
                        <span>Nam</span>
                    }
                    else
                    {
                        <span>Nữ</span>
                    }
            </td>
           
            <td>
                @Html.DisplayFor(modelItem => item.Diachi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sdt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capdoday)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Trinhdo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nguoitao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ngaytao)
            </td>
            <td>
                <td>
                    <a asp-action="formSuaGiaovien" asp-route-id="@item.Magv" class="btn btn-primary">Sửa</a>
                </td>
                <td>
                    <a asp-action="formXoaGiaoVien" asp-route-id="@item.Magv" class="btn btn-danger delete-btn">Xóa</a>
                </td>
            </td>
        </tr>
}
    </tbody>
</table>
<script type="text/javascript">
    function timGiaoVien_click() {
        const hotenhv = document.getElementById("hotenhv").value;
        // Create an XMLHttpRequest object
        const xhttp = new XMLHttpRequest();

        // Define a callback function
        xhttp.onload = function () {
            // Here you can use the Data
            document.getElementById("danhsachgiaovien").innerHTML = xhttp.responseText;
        }

        // Send a request
        const strUrl = "/Giaovien/timGiaoVien/" + hotenhv;
        xhttp.open("GET", strUrl);
        xhttp.send();

    }</script>

@if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
{
    <script>
        window.onload = function () {
            var alertElement = document.getElementById('msgAlert');
            alertElement.style.display = 'block';
            setTimeout(function () {
                alertElement.style.opacity = '0';
                setTimeout(function () {
                    alertElement.style.display = 'none';
                }, 500); // Thời gian ẩn sau khi mờ dần (đơn vị: milliseconds)
            }, 2000); // Thời gian hiển thị (đơn vị: milliseconds)
        }</script>
}

@if (!string.IsNullOrEmpty(ViewBag.SuaSuccessMessage))
{
    <script>
        window.onload = function () {
            var alertElement = document.getElementById('msgAlertS');
            alertElement.style.display = 'block';
            setTimeout(function () {
                alertElement.style.opacity = '0';
                setTimeout(function () {
                    alertElement.style.display = 'none';
                }, 500); // Thời gian ẩn sau khi mờ dần (đơn vị: milliseconds)
            }, 2000); // Thời gian hiển thị (đơn vị: milliseconds)
        }</script>
}
@if (!string.IsNullOrEmpty(ViewBag.XoaSuccessMessageGV))
{
    <script>
        window.onload = function () {
            var alertElement = document.getElementById('msgAlertX');
            alertElement.style.display = 'block';
            setTimeout(function () {
                alertElement.style.opacity = '0';
                setTimeout(function () {
                    alertElement.style.display = 'none';
                }, 500); // Thời gian ẩn sau khi mờ dần (đơn vị: milliseconds)
            }, 2000); // Thời gian hiển thị (đơn vị: milliseconds)
        }</script>
}